Turbo Assembler	 Version 4.1	    02/22/25 25:33:30	    Page 1
regframe.asm



      1				     ;------------------------------------------------------------------------------
      2				     ;				     Second Task
      3				     ;			      Frame with info about registers
      4				     ;				  "Resident Frame"
      5				     ;			       (c) 2025	Muratov	Artyom
      6				     ;------------------------------------------------------------------------------
      7
      8	0000			     .model tiny
      9	0000			     .code
     10				     org 100h
     11
     12	0100			     Start:
     13	0100  33 C0				     xor  ax, ax		     ; ax = 0
     14	0102  8E C0				     mov  es, ax		     ; es = ax
     15	0104  BB 0024				     mov  bx, 09h * 4		     ; offset for ptr to ISR_09h
     16
     17	0107  26: 8B 07				     mov  ax, es:[bx]		     ; Ofs_old_09h and Seg_old_09h
     18	010A  A3 015Ar				     mov  Ofs_old_09h, ax	     ; from array with
     19	010D  26: 8B 47	02			     mov  ax, es:[bx + 2]	     ; ptrs to interrupt service
     20	0111  A3 015Cr				     mov  Seg_old_09h, ax	     ; routine
     21
     22
     23	0114  CD 09				     int  09h			     ; call old	ISR 09h
     24
     25	0116  FA				     cli
     26	0117  26: C7 07	0136r			     mov  es:[bx], offset MY_ISR_09h ; offset of my interrupt 09h
     27										     ; service routiny
     28	011C  0E				     push cs
     29	011D  58				     pop  ax			     ; ax = cs
     30	011E  26: 89 47	02			     mov  es:[bx + 2], ax	     ; es:[bx +	2] = ax	(= segment
     31										     ; with code)
     32	0122  FB				     sti
     33
     34	0123  CD 09				     int  09h			     ; call old	ISR 09h
     35
     36	0125  B8 3100				     mov  ax, 3100h		     ; DOS Fn 31H: Terminate & Stay
     37										     ; Resident
     38	0128  BA 015Fr				     mov  dx, offset EOP	     ; dx = &EOP
     39	012B  D1 EA D1 EA D1 EA	D1+		     shr  dx, 4			     ; dx /= 16
     40	      EA
     41	0133  42				     inc  dx			     ; dx++
     42	0134  CD 21				     int  21h
     43
     44				     ;------------------------------------------------------------------------------
     45				     ; MY_ISR_09h - new	handler	for interrupt 09h
     46				     ; Entry:	     None
     47				     ; Exit:	     None
     48				     ; Destroy:	     None
     49				     ;------------------------------------------------------------------------------
     50	0136			     MY_ISR_09h	     proc
     51	0136  50				     push ax			     ; save ax in stack
     52	0137  53				     push bx			     ; save bx in stack
     53	0138  06				     push es			     ; save es in stack
     54
     55	0139  BB B800				     mov  bx, 0b800h		     ; bx = VIDEOSEG
     56	013C  8E C3				     mov  es, bx		     ; es = VIDEOSEG
     57	013E  BB 0370				     mov  bx, 5	* 80 * 2 + 40 *	2    ; bx = offset in screen
Turbo Assembler	 Version 4.1	    02/22/25 25:33:30	    Page 2
regframe.asm



     58	0141  B4 4E				     mov  ah, 4eh		     ; ah = color of text
     59
     60	0143  E4 60				     in	  al, 60h		     ; read data from PPI port
     61	0145  26: 89 07				     mov  es:[bx], ax		     ; al to videoseg
     62
     63	0148  E4 61				     in	  al,  61h		     ; al = port 61h
     64	014A  0C 80				     or	  al,  80h		     ; al |= 10000000b
     65	014C  E6 61				     out  61h, al		     ; out to 61h PPI
     66	014E  24 7F				     and  al, not 80h		     ; al &= 01111111b
     67	0150  E6 61				     out  61h, al		     ; out to 61h PPI
     68	0152  B0 20				     mov  al,  20h		     ; al = 20h
     69	0154  E6 20				     out  20h, al		     ; out to interrupt	controller
     70
     71	0156  07				     pop  es			     ; back es from stack
     72	0157  5B				     pop  bx			     ; back bx from stack
     73	0158  58				     pop  ax			     ; back ax from stack
     74
     75	0159  EA				     db	  0eah			     ; jmp
     76	015A  0000		     Ofs_old_09h     dw	  0			     ; offset
     77	015C  0000		     Seg_old_09h     dw	  0			     ; segment
     78
     79	015E  CF				     iret			     ; interrupt return
     80	015F			     MY_ISR_09h	     endp
     81
     82	015F			     EOP:
     83				     end	     Start
Turbo Assembler	 Version 4.1	    02/22/25 25:33:30	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/22/25"
??FILENAME			  Text	 "regframe"
??TIME				  Text	 "25:33:30"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 REGFRAME
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
EOP				  Near	 DGROUP:015F
MY_ISR_09H			  Near	 DGROUP:0136
OFS_OLD_09H			  Word	 DGROUP:015A
SEG_OLD_09H			  Word	 DGROUP:015C
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  015F Word	  Public  CODE
